//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HA.HostWeb.FullTextService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FullTextService.IFullTextService")]
    public interface IFullTextService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFullTextService/FindWork", ReplyAction="http://tempuri.org/IFullTextService/FindWorkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.Services.WcfException), Action="http://tempuri.org/IFullTextService/FindWorkWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork> FindWork(HA.Services.Parameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFullTextService/FindWork", ReplyAction="http://tempuri.org/IFullTextService/FindWorkResponse")]
        System.IAsyncResult BeginFindWork(HA.Services.Parameters parameters, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork> EndFindWork(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFullTextServiceChannel : HA.HostWeb.FullTextService.IFullTextService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FullTextServiceClient : System.ServiceModel.ClientBase<HA.HostWeb.FullTextService.IFullTextService>, HA.HostWeb.FullTextService.IFullTextService {
        
        private BeginOperationDelegate onBeginFindWorkDelegate;
        
        private EndOperationDelegate onEndFindWorkDelegate;
        
        private System.Threading.SendOrPostCallback onFindWorkCompletedDelegate;
        
        public FullTextServiceClient() {
        }
        
        public FullTextServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FullTextServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FullTextServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FullTextServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<FindWorkCompletedEventArgs> FindWorkCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork> FindWork(HA.Services.Parameters parameters) {
            return base.Channel.FindWork(parameters);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindWork(HA.Services.Parameters parameters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindWork(parameters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork> EndFindWork(System.IAsyncResult result) {
            return base.Channel.EndFindWork(result);
        }
        
        private System.IAsyncResult OnBeginFindWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HA.Services.Parameters parameters = ((HA.Services.Parameters)(inValues[0]));
            return this.BeginFindWork(parameters, callback, asyncState);
        }
        
        private object[] OnEndFindWork(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HA.Services.Objects.FullTextWork> retVal = this.EndFindWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindWorkCompleted(object state) {
            if ((this.FindWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindWorkCompleted(this, new FindWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindWorkAsync(HA.Services.Parameters parameters) {
            this.FindWorkAsync(parameters, null);
        }
        
        public void FindWorkAsync(HA.Services.Parameters parameters, object userState) {
            if ((this.onBeginFindWorkDelegate == null)) {
                this.onBeginFindWorkDelegate = new BeginOperationDelegate(this.OnBeginFindWork);
            }
            if ((this.onEndFindWorkDelegate == null)) {
                this.onEndFindWorkDelegate = new EndOperationDelegate(this.OnEndFindWork);
            }
            if ((this.onFindWorkCompletedDelegate == null)) {
                this.onFindWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindWorkCompleted);
            }
            base.InvokeAsync(this.onBeginFindWorkDelegate, new object[] {
                        parameters}, this.onEndFindWorkDelegate, this.onFindWorkCompletedDelegate, userState);
        }
    }
}
