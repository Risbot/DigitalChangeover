//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HA.MVVMClient.SecurityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/HA.Services.Objects")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetachmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WorkerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetachmentID {
            get {
                return this.DetachmentIDField;
            }
            set {
                if ((this.DetachmentIDField.Equals(value) != true)) {
                    this.DetachmentIDField = value;
                    this.RaisePropertyChanged("DetachmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WorkerID {
            get {
                return this.WorkerIDField;
            }
            set {
                if ((this.WorkerIDField.Equals(value) != true)) {
                    this.WorkerIDField = value;
                    this.RaisePropertyChanged("WorkerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/HA.Services.Objects")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    [System.SerializableAttribute()]
    public partial class WcfException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Result> ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HA.MVVMClient.SecurityService.ErrorStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Result> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HA.MVVMClient.SecurityService.ErrorStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<string> MemberNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> MemberName {
            get {
                return this.MemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberNameField, value) != true)) {
                    this.MemberNameField = value;
                    this.RaisePropertyChanged("MemberName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorStatus", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    public enum ErrorStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseError = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseInfo = 500,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknowenError = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateError = 600,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecurityError = 400,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecurityService.ISecurityService")]
    public interface ISecurityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/AddUser", ReplyAction="http://tempuri.org/ISecurityService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/AddUserWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        HA.MVVMClient.SecurityService.User AddUser(HA.MVVMClient.SecurityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/AddUser", ReplyAction="http://tempuri.org/ISecurityService/AddUserResponse")]
        System.IAsyncResult BeginAddUser(HA.MVVMClient.SecurityService.User user, System.AsyncCallback callback, object asyncState);
        
        HA.MVVMClient.SecurityService.User EndAddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteUser", ReplyAction="http://tempuri.org/ISecurityService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/DeleteUserWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        void DeleteUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/DeleteUser", ReplyAction="http://tempuri.org/ISecurityService/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(int userID, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ResetPassword", ReplyAction="http://tempuri.org/ISecurityService/ResetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/ResetPasswordWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        string ResetPassword(int userID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/ResetPassword", ReplyAction="http://tempuri.org/ISecurityService/ResetPasswordResponse")]
        System.IAsyncResult BeginResetPassword(int userID, System.AsyncCallback callback, object asyncState);
        
        string EndResetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateUser", ReplyAction="http://tempuri.org/ISecurityService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/UpdateUserWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        void UpdateUser(HA.MVVMClient.SecurityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/UpdateUser", ReplyAction="http://tempuri.org/ISecurityService/UpdateUserResponse")]
        System.IAsyncResult BeginUpdateUser(HA.MVVMClient.SecurityService.User user, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetRoles", ReplyAction="http://tempuri.org/ISecurityService/GetRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/GetRolesWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/GetRoles", ReplyAction="http://tempuri.org/ISecurityService/GetRolesResponse")]
        System.IAsyncResult BeginGetRoles(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> EndGetRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUsers", ReplyAction="http://tempuri.org/ISecurityService/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/GetUsersWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User> GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/GetUsers", ReplyAction="http://tempuri.org/ISecurityService/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User> EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserInfo", ReplyAction="http://tempuri.org/ISecurityService/GetUserInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/GetUserInfoWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        HA.MVVMClient.SecurityService.User GetUserInfo(string userName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/GetUserInfo", ReplyAction="http://tempuri.org/ISecurityService/GetUserInfoResponse")]
        System.IAsyncResult BeginGetUserInfo(string userName, System.AsyncCallback callback, object asyncState);
        
        HA.MVVMClient.SecurityService.User EndGetUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ChangePassword", ReplyAction="http://tempuri.org/ISecurityService/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.SecurityService.WcfException), Action="http://tempuri.org/ISecurityService/ChangePasswordWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        bool ChangePassword(HA.MVVMClient.SecurityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/ChangePassword", ReplyAction="http://tempuri.org/ISecurityService/ChangePasswordResponse")]
        System.IAsyncResult BeginChangePassword(HA.MVVMClient.SecurityService.User user, System.AsyncCallback callback, object asyncState);
        
        bool EndChangePassword(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecurityServiceChannel : HA.MVVMClient.SecurityService.ISecurityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HA.MVVMClient.SecurityService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HA.MVVMClient.SecurityService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HA.MVVMClient.SecurityService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HA.MVVMClient.SecurityService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityServiceClient : System.ServiceModel.ClientBase<HA.MVVMClient.SecurityService.ISecurityService>, HA.MVVMClient.SecurityService.ISecurityService {
        
        private BeginOperationDelegate onBeginAddUserDelegate;
        
        private EndOperationDelegate onEndAddUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPasswordDelegate;
        
        private EndOperationDelegate onEndResetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onResetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserDelegate;
        
        private EndOperationDelegate onEndUpdateUserDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRolesDelegate;
        
        private EndOperationDelegate onEndGetRolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoDelegate;
        
        private EndOperationDelegate onEndGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePasswordDelegate;
        
        private EndOperationDelegate onEndChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangePasswordCompletedDelegate;
        
        public SecurityServiceClient() {
        }
        
        public SecurityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddUserCompletedEventArgs> AddUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<ResetPasswordCompletedEventArgs> ResetPasswordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateUserCompleted;
        
        public event System.EventHandler<GetRolesCompletedEventArgs> GetRolesCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<GetUserInfoCompletedEventArgs> GetUserInfoCompleted;
        
        public event System.EventHandler<ChangePasswordCompletedEventArgs> ChangePasswordCompleted;
        
        public HA.MVVMClient.SecurityService.User AddUser(HA.MVVMClient.SecurityService.User user) {
            return base.Channel.AddUser(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUser(HA.MVVMClient.SecurityService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HA.MVVMClient.SecurityService.User EndAddUser(System.IAsyncResult result) {
            return base.Channel.EndAddUser(result);
        }
        
        private System.IAsyncResult OnBeginAddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HA.MVVMClient.SecurityService.User user = ((HA.MVVMClient.SecurityService.User)(inValues[0]));
            return this.BeginAddUser(user, callback, asyncState);
        }
        
        private object[] OnEndAddUser(System.IAsyncResult result) {
            HA.MVVMClient.SecurityService.User retVal = this.EndAddUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserCompleted(object state) {
            if ((this.AddUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserAsync(HA.MVVMClient.SecurityService.User user) {
            this.AddUserAsync(user, null);
        }
        
        public void AddUserAsync(HA.MVVMClient.SecurityService.User user, object userState) {
            if ((this.onBeginAddUserDelegate == null)) {
                this.onBeginAddUserDelegate = new BeginOperationDelegate(this.OnBeginAddUser);
            }
            if ((this.onEndAddUserDelegate == null)) {
                this.onEndAddUserDelegate = new EndOperationDelegate(this.OnEndAddUser);
            }
            if ((this.onAddUserCompletedDelegate == null)) {
                this.onAddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserDelegate, new object[] {
                        user}, this.onEndAddUserDelegate, this.onAddUserCompletedDelegate, userState);
        }
        
        public void DeleteUser(int userID) {
            base.Channel.DeleteUser(userID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUser(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteUser(System.IAsyncResult result) {
            base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return this.BeginDeleteUser(userID, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            this.EndDeleteUser(result);
            return null;
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(int userID) {
            this.DeleteUserAsync(userID, null);
        }
        
        public void DeleteUserAsync(int userID, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        userID}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        public string ResetPassword(int userID) {
            return base.Channel.ResetPassword(userID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetPassword(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassword(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndResetPassword(System.IAsyncResult result) {
            return base.Channel.EndResetPassword(result);
        }
        
        private System.IAsyncResult OnBeginResetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return this.BeginResetPassword(userID, callback, asyncState);
        }
        
        private object[] OnEndResetPassword(System.IAsyncResult result) {
            string retVal = this.EndResetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetPasswordCompleted(object state) {
            if ((this.ResetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPasswordAsync(int userID) {
            this.ResetPasswordAsync(userID, null);
        }
        
        public void ResetPasswordAsync(int userID, object userState) {
            if ((this.onBeginResetPasswordDelegate == null)) {
                this.onBeginResetPasswordDelegate = new BeginOperationDelegate(this.OnBeginResetPassword);
            }
            if ((this.onEndResetPasswordDelegate == null)) {
                this.onEndResetPasswordDelegate = new EndOperationDelegate(this.OnEndResetPassword);
            }
            if ((this.onResetPasswordCompletedDelegate == null)) {
                this.onResetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginResetPasswordDelegate, new object[] {
                        userID}, this.onEndResetPasswordDelegate, this.onResetPasswordCompletedDelegate, userState);
        }
        
        public void UpdateUser(HA.MVVMClient.SecurityService.User user) {
            base.Channel.UpdateUser(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateUser(HA.MVVMClient.SecurityService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateUser(System.IAsyncResult result) {
            base.Channel.EndUpdateUser(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HA.MVVMClient.SecurityService.User user = ((HA.MVVMClient.SecurityService.User)(inValues[0]));
            return this.BeginUpdateUser(user, callback, asyncState);
        }
        
        private object[] OnEndUpdateUser(System.IAsyncResult result) {
            this.EndUpdateUser(result);
            return null;
        }
        
        private void OnUpdateUserCompleted(object state) {
            if ((this.UpdateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserAsync(HA.MVVMClient.SecurityService.User user) {
            this.UpdateUserAsync(user, null);
        }
        
        public void UpdateUserAsync(HA.MVVMClient.SecurityService.User user, object userState) {
            if ((this.onBeginUpdateUserDelegate == null)) {
                this.onBeginUpdateUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateUser);
            }
            if ((this.onEndUpdateUserDelegate == null)) {
                this.onEndUpdateUserDelegate = new EndOperationDelegate(this.OnEndUpdateUser);
            }
            if ((this.onUpdateUserCompletedDelegate == null)) {
                this.onUpdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserDelegate, new object[] {
                        user}, this.onEndUpdateUserDelegate, this.onUpdateUserCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> GetRoles() {
            return base.Channel.GetRoles();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRoles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> EndGetRoles(System.IAsyncResult result) {
            return base.Channel.EndGetRoles(result);
        }
        
        private System.IAsyncResult OnBeginGetRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRoles(callback, asyncState);
        }
        
        private object[] OnEndGetRoles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.Role> retVal = this.EndGetRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRolesCompleted(object state) {
            if ((this.GetRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRolesAsync() {
            this.GetRolesAsync(null);
        }
        
        public void GetRolesAsync(object userState) {
            if ((this.onBeginGetRolesDelegate == null)) {
                this.onBeginGetRolesDelegate = new BeginOperationDelegate(this.OnBeginGetRoles);
            }
            if ((this.onEndGetRolesDelegate == null)) {
                this.onEndGetRolesDelegate = new EndOperationDelegate(this.OnEndGetRoles);
            }
            if ((this.onGetRolesCompletedDelegate == null)) {
                this.onGetRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRolesDelegate, null, this.onEndGetRolesDelegate, this.onGetRolesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User> GetUsers() {
            return base.Channel.GetUsers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User> EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.SecurityService.User> retVal = this.EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        public HA.MVVMClient.SecurityService.User GetUserInfo(string userName) {
            return base.Channel.GetUserInfo(userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserInfo(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfo(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HA.MVVMClient.SecurityService.User EndGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BeginGetUserInfo(userName, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfo(System.IAsyncResult result) {
            HA.MVVMClient.SecurityService.User retVal = this.EndGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoCompleted(object state) {
            if ((this.GetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoAsync(string userName) {
            this.GetUserInfoAsync(userName, null);
        }
        
        public void GetUserInfoAsync(string userName, object userState) {
            if ((this.onBeginGetUserInfoDelegate == null)) {
                this.onBeginGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfo);
            }
            if ((this.onEndGetUserInfoDelegate == null)) {
                this.onEndGetUserInfoDelegate = new EndOperationDelegate(this.OnEndGetUserInfo);
            }
            if ((this.onGetUserInfoCompletedDelegate == null)) {
                this.onGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoDelegate, new object[] {
                        userName}, this.onEndGetUserInfoDelegate, this.onGetUserInfoCompletedDelegate, userState);
        }
        
        public bool ChangePassword(HA.MVVMClient.SecurityService.User user) {
            return base.Channel.ChangePassword(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangePassword(HA.MVVMClient.SecurityService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePassword(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndChangePassword(System.IAsyncResult result) {
            return base.Channel.EndChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HA.MVVMClient.SecurityService.User user = ((HA.MVVMClient.SecurityService.User)(inValues[0]));
            return this.BeginChangePassword(user, callback, asyncState);
        }
        
        private object[] OnEndChangePassword(System.IAsyncResult result) {
            bool retVal = this.EndChangePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePasswordCompleted(object state) {
            if ((this.ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePasswordAsync(HA.MVVMClient.SecurityService.User user) {
            this.ChangePasswordAsync(user, null);
        }
        
        public void ChangePasswordAsync(HA.MVVMClient.SecurityService.User user, object userState) {
            if ((this.onBeginChangePasswordDelegate == null)) {
                this.onBeginChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginChangePassword);
            }
            if ((this.onEndChangePasswordDelegate == null)) {
                this.onEndChangePasswordDelegate = new EndOperationDelegate(this.OnEndChangePassword);
            }
            if ((this.onChangePasswordCompletedDelegate == null)) {
                this.onChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangePasswordDelegate, new object[] {
                        user}, this.onEndChangePasswordDelegate, this.onChangePasswordCompletedDelegate, userState);
        }
    }
}
