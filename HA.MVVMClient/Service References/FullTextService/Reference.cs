//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HA.MVVMClient.FullTextService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parameters", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    [System.SerializableAttribute()]
    public partial class Parameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetachmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetachmentID {
            get {
                return this.DetachmentIDField;
            }
            set {
                if ((this.DetachmentIDField.Equals(value) != true)) {
                    this.DetachmentIDField = value;
                    this.RaisePropertyChanged("DetachmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchKey {
            get {
                return this.SearchKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchKeyField, value) != true)) {
                    this.SearchKeyField = value;
                    this.RaisePropertyChanged("SearchKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((this.VehicleIDField.Equals(value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FullTextWork", Namespace="http://schemas.datacontract.org/2004/07/HA.Services.Objects")]
    [System.SerializableAttribute()]
    public partial class FullTextWork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateDescriptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsNightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CauseDescription {
            get {
                return this.CauseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseDescriptionField, value) != true)) {
                    this.CauseDescriptionField = value;
                    this.RaisePropertyChanged("CauseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateContent {
            get {
                return this.DateContentField;
            }
            set {
                if ((this.DateContentField.Equals(value) != true)) {
                    this.DateContentField = value;
                    this.RaisePropertyChanged("DateContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateDescriptor {
            get {
                return this.DateDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.DateDescriptorField, value) != true)) {
                    this.DateDescriptorField = value;
                    this.RaisePropertyChanged("DateDescriptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DateID {
            get {
                return this.DateIDField;
            }
            set {
                if ((this.DateIDField.Equals(value) != true)) {
                    this.DateIDField = value;
                    this.RaisePropertyChanged("DateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsNight {
            get {
                return this.DateIsNightField;
            }
            set {
                if ((this.DateIsNightField.Equals(value) != true)) {
                    this.DateIsNightField = value;
                    this.RaisePropertyChanged("DateIsNight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultDescription {
            get {
                return this.FaultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultDescriptionField, value) != true)) {
                    this.FaultDescriptionField = value;
                    this.RaisePropertyChanged("FaultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleDescription {
            get {
                return this.VehicleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleDescriptionField, value) != true)) {
                    this.VehicleDescriptionField = value;
                    this.RaisePropertyChanged("VehicleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleNumber {
            get {
                return this.VehicleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleNumberField, value) != true)) {
                    this.VehicleNumberField = value;
                    this.RaisePropertyChanged("VehicleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTypeDescription {
            get {
                return this.WorkTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTypeDescriptionField, value) != true)) {
                    this.WorkTypeDescriptionField = value;
                    this.RaisePropertyChanged("WorkTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTypeName {
            get {
                return this.WorkTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTypeNameField, value) != true)) {
                    this.WorkTypeNameField = value;
                    this.RaisePropertyChanged("WorkTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    [System.SerializableAttribute()]
    public partial class WcfException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.Result> ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HA.MVVMClient.FullTextService.ErrorStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.Result> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HA.MVVMClient.FullTextService.ErrorStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<string> MemberNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> MemberName {
            get {
                return this.MemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberNameField, value) != true)) {
                    this.MemberNameField = value;
                    this.RaisePropertyChanged("MemberName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorStatus", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
    public enum ErrorStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseError = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseInfo = 500,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknowenError = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateError = 600,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecurityError = 400,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FullTextService.IFullTextService")]
    public interface IFullTextService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFullTextService/FindWork", ReplyAction="http://tempuri.org/IFullTextService/FindWorkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HA.MVVMClient.FullTextService.WcfException), Action="http://tempuri.org/IFullTextService/FindWorkWcfExceptionFault", Name="WcfException", Namespace="http://schemas.datacontract.org/2004/07/HA.Services")]
        System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork> FindWork(HA.MVVMClient.FullTextService.Parameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFullTextService/FindWork", ReplyAction="http://tempuri.org/IFullTextService/FindWorkResponse")]
        System.IAsyncResult BeginFindWork(HA.MVVMClient.FullTextService.Parameters parameters, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork> EndFindWork(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFullTextServiceChannel : HA.MVVMClient.FullTextService.IFullTextService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FullTextServiceClient : System.ServiceModel.ClientBase<HA.MVVMClient.FullTextService.IFullTextService>, HA.MVVMClient.FullTextService.IFullTextService {
        
        private BeginOperationDelegate onBeginFindWorkDelegate;
        
        private EndOperationDelegate onEndFindWorkDelegate;
        
        private System.Threading.SendOrPostCallback onFindWorkCompletedDelegate;
        
        public FullTextServiceClient() {
        }
        
        public FullTextServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FullTextServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FullTextServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FullTextServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<FindWorkCompletedEventArgs> FindWorkCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork> FindWork(HA.MVVMClient.FullTextService.Parameters parameters) {
            return base.Channel.FindWork(parameters);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindWork(HA.MVVMClient.FullTextService.Parameters parameters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindWork(parameters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork> EndFindWork(System.IAsyncResult result) {
            return base.Channel.EndFindWork(result);
        }
        
        private System.IAsyncResult OnBeginFindWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HA.MVVMClient.FullTextService.Parameters parameters = ((HA.MVVMClient.FullTextService.Parameters)(inValues[0]));
            return this.BeginFindWork(parameters, callback, asyncState);
        }
        
        private object[] OnEndFindWork(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HA.MVVMClient.FullTextService.FullTextWork> retVal = this.EndFindWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindWorkCompleted(object state) {
            if ((this.FindWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindWorkCompleted(this, new FindWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindWorkAsync(HA.MVVMClient.FullTextService.Parameters parameters) {
            this.FindWorkAsync(parameters, null);
        }
        
        public void FindWorkAsync(HA.MVVMClient.FullTextService.Parameters parameters, object userState) {
            if ((this.onBeginFindWorkDelegate == null)) {
                this.onBeginFindWorkDelegate = new BeginOperationDelegate(this.OnBeginFindWork);
            }
            if ((this.onEndFindWorkDelegate == null)) {
                this.onEndFindWorkDelegate = new EndOperationDelegate(this.OnEndFindWork);
            }
            if ((this.onFindWorkCompletedDelegate == null)) {
                this.onFindWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindWorkCompleted);
            }
            base.InvokeAsync(this.onBeginFindWorkDelegate, new object[] {
                        parameters}, this.onEndFindWorkDelegate, this.onFindWorkCompletedDelegate, userState);
        }
    }
}
